name: &name "SpeakerIdentificationInfer"

data:
    enrollment_manifest: ???
    test_manifest: ???
    out_manifest: './infer_output.json'
    sample_rate: 16000

backend:
    backend_model: cosine_similarity # supported backends are cosine_similarity and neural_classifier

    cosine_similarity:
        model_path: titanet_large # or path to .nemo file
        batch_size: 32

    neural_classifier:
        model_path: ??? # path to neural model trained/finetuned with enrollment dataset
        batch_size: 32

# json manifest line example
#
# enrollment_manifest:
# {"audio_filepath": "/path/to/audio_file", "offset": 0, "duration": null, "label": "<speaker_label>"}
# 
# test_manifest:
# {"audio_filepath": "/path/to/audio_file", "offset": 0, "duration": null, "label": "infer"}
#
