name: HeteronymClassification

# Dataset info
# Chinese Polyphones with Pinyin (CPP)
# https://github.com/kakaobrain/g2pM#the-cpp-dataset
train_manifest: ???
validation_manifest: ???
test_manifest: ???
do_training: True
do_testing: False
pretrained_model: null # path to .nemo file or model name from list_available_models()

model:
  wordids: ??? # path to CPP wordids in WikiHomograph dataset format e.g. ./cpp_manifest/wordid.tsv
  max_seq_length: 256 # the maximum length BERT supports is 512
  label_ids: null # will be filled during training
  class_labels:
    class_labels_file: null # will be generated during training and saved in .nemo file

  language_model:
    pretrained_model_name: bert-base-chinese # https://huggingface.co/bert-base-chinese/tree/main
    lm_checkpoint: null
    config_file: null # json file, precedence over config
    config: null

  tokenizer:
    tokenizer_name: ${model.language_model.pretrained_model_name} # or sentencepiece
    vocab_file: null # path to vocab file
    tokenizer_model: null # only used if tokenizer is sentencepiece
    special_tokens: null

  head:
    num_fc_layers: 2
    fc_dropout: 0.5
    activation: 'relu'
    use_transformer_init: True

  train_ds:
    dataset:
      _target_: "nemo.collections.tts.g2p.data.heteronym_classification_data.HeteronymClassificationDataset"
      manifest: ${train_manifest}
      grapheme_field: "text_graphemes" # name of the field in manifest for input grapheme text
    dataloader_params:
      drop_last: false
      shuffle: true
      batch_size: 32
      num_workers: 0

  validation_ds:
    dataset:
      _target_: "nemo.collections.tts.g2p.data.heteronym_classification_data.HeteronymClassificationDataset"
      manifest: ${validation_manifest}
      grapheme_field: "text_graphemes" # name of the field in manifest for input grapheme text
    dataloader_params:
      drop_last: false
      shuffle: false
      batch_size: 32
      num_workers: 0

  test_ds:
    dataset:
      _target_: "nemo.collections.tts.g2p.data.heteronym_classification_data.HeteronymClassificationDataset"
      manifest: ${test_manifest}
      grapheme_field: "text_graphemes" # name of the field in manifest for input grapheme text
    dataloader_params:
      drop_last: false
      shuffle: false
      batch_size: 32 #64
      num_workers: 0

  optim:
    name: adamw
    lr: 5e-5
    weight_decay: 0.01
    # scheduler setup
    sched:
      name: WarmupAnnealing
      # pytorch lightning args
      reduce_on_plateau: false
      # scheduler config override
      warmup_steps: null
      warmup_ratio: 0.1
      last_epoch: -1

trainer:
  devices: 1 # number of gpus
  max_epochs: 10
  num_nodes: 1
  accelerator: gpu
  strategy: ddp
  accumulate_grad_batches: 1
  enable_checkpointing: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 200
  check_val_every_n_epoch: 1

exp_manager:
  exp_dir: null
  name: ${name}
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    save_top_k: 1
    monitor: "val_loss"
    mode: "min"
    save_best_model: true
